[{"/Users/zuko/Documents/botiga-merchant-dashboard/src/index.js":"1","/Users/zuko/Documents/botiga-merchant-dashboard/src/reportWebVitals.js":"2","/Users/zuko/Documents/botiga-merchant-dashboard/src/App.js":"3","/Users/zuko/Documents/botiga-merchant-dashboard/src/components/add-product/add-product.js":"4","/Users/zuko/Documents/botiga-merchant-dashboard/src/helpers/validators.js":"5","/Users/zuko/Documents/botiga-merchant-dashboard/src/components/AppRoutes.js":"6","/Users/zuko/Documents/botiga-merchant-dashboard/src/components/auth/Login.js":"7","/Users/zuko/Documents/botiga-merchant-dashboard/src/helpers/Token.js":"8","/Users/zuko/Documents/botiga-merchant-dashboard/src/components/auth/login.js":"9","/Users/zuko/Documents/botiga-merchant-dashboard/src/components/auth/verify-otp.js":"10","/Users/zuko/Documents/botiga-merchant-dashboard/src/services/product-service.js":"11","/Users/zuko/Documents/botiga-merchant-dashboard/src/helpers/axios.js":"12","/Users/zuko/Documents/botiga-merchant-dashboard/src/services/category-service.js":"13","/Users/zuko/Documents/botiga-merchant-dashboard/src/services/common-service.js":"14","/Users/zuko/Documents/botiga-merchant-dashboard/src/services/auth-service.js":"15"},{"size":598,"mtime":1612081075971,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1611773174145,"results":"18","hashOfConfig":"17"},{"size":612,"mtime":1612086422210,"results":"19","hashOfConfig":"17"},{"size":5895,"mtime":1612050987507,"results":"20","hashOfConfig":"17"},{"size":356,"mtime":1612002513476,"results":"21","hashOfConfig":"17"},{"size":478,"mtime":1612034669353,"results":"22","hashOfConfig":"17"},{"size":669,"mtime":1612036648900,"results":"23","hashOfConfig":"17"},{"size":506,"mtime":1612024990953,"results":"24","hashOfConfig":"17"},{"size":669,"mtime":1612036648900,"results":"25","hashOfConfig":"17"},{"size":1065,"mtime":1612088860109,"results":"26","hashOfConfig":"17"},{"size":544,"mtime":1612044824487,"results":"27","hashOfConfig":"17"},{"size":505,"mtime":1612081227398,"results":"28","hashOfConfig":"17"},{"size":154,"mtime":1612039661968,"results":"29","hashOfConfig":"17"},{"size":318,"mtime":1612054748791,"results":"30","hashOfConfig":"17"},{"size":244,"mtime":1612087047117,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1swhahm",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/zuko/Documents/botiga-merchant-dashboard/src/index.js",[],["68","69"],"/Users/zuko/Documents/botiga-merchant-dashboard/src/reportWebVitals.js",[],"/Users/zuko/Documents/botiga-merchant-dashboard/src/App.js",["70","71","72"],"import React, { useEffect, useState } from \"react\";\nimport { AppRoutes } from \"./components/AppRoutes\";\nimport { fetchProfile } from \"./services/auth-service\";\nimport { withRouter } from \"react-router-dom\";\n\nexport const App = withRouter(({ history }) => {\n  const [isLoading, setLoading] = useState(false);\n\n  // useEffect(() => {\n  //   setLoading(true);\n  //   fetchProfile()\n  //     .then(() => history.push(\"/add-product\"))\n  //     .catch(err => history.push(\"/\"))\n  //     .finally(() => setLoading(false))\n  // }, []);\n\n  if (isLoading) return (<h1>Loading...</h1>)\n  return (\n    <AppRoutes />\n  );\n});","/Users/zuko/Documents/botiga-merchant-dashboard/src/components/add-product/add-product.js",["73","74"],"import React, { useCallback, useState, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone'\nimport { Formik } from 'formik';\nimport { addProductValidators } from \"../../helpers/validators\";\nimport { fetchCategories } from \"../../services/category-service\";\nimport { getPresignedImageUrl,uploadImageToS3 } from \"../../services/common-service\";\nimport { saveProduct } from \"../../services/product-service\";\n\n\nfunction ProductImage(props) {\n    const onDrop = useCallback(acceptedFiles => {\n        props.setPreviewImage(acceptedFiles.shift());\n    }, [])\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n    return (\n        <div {...getRootProps()}>\n            <input {...getInputProps()} />\n            {\n                isDragActive ?\n                    <p>Drop the files here ...</p> :\n                    <p>Drag 'n' drop some files here, or click to select files</p>\n            }\n        </div>\n    );\n}\n\nexport function AddProduct() {\n    const [isLoading, setIsLoading] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const [categories, setCategories] = useState([]);\n    const [imageUrl, setImageUrl] = useState({ uploadUrl: '', downloadUrl: '' });\n    const [previewImage, setPreviewImage] = useState(null);\n    const units = ['kg', 'gms', 'lt', 'ml', 'piece', 'pieces'];\n    const initialValue = {\n        categoryId: '',\n        productName: '',\n        price: '',\n        quantity: '',\n        unit: '',\n        description: '',\n    };\n\n    async function loadCategories() {\n        const { data } = await fetchCategories();\n        if (data) { setCategories(data); }\n    }\n\n    async function loadImageUrl() {\n        const { data } = await getPresignedImageUrl();\n        if (data) { setImageUrl(data); }\n    }\n\n    useEffect(() => {\n        setIsLoading(true);\n        try {\n            loadImageUrl();\n            loadCategories();\n        } catch (err) {\n            setIsError(true)\n        } finally { setIsLoading(false); }\n    }, []);\n\n    if (isLoading) {\n        return <h1>Loading ...</h1>\n    } if (isError) {\n        return <h1>Error</h1>\n    }\n    return (\n        <Formik\n            validationSchema={addProductValidators}\n            initialValues={initialValue}\n            onSubmit={async (values) => {\n\n                try {\n                    await uploadImageToS3(imageUrl.uploadUrl,previewImage)\n                    await saveProduct(values.categoryId, values.productName, values.price, values.quantity, values.unit, imageUrl.downloadUrl, values.description);\n                } catch (err) { }\n                finally { }\n\n            }}>\n            {formik => (\n                <form onSubmit={formik.handleSubmit}>\n                    {previewImage ? <img src={URL.createObjectURL(previewImage)} style={{ height: 30, width: 30 }} /> : <ProductImage setPreviewImage={setPreviewImage}/>}\n                    <label htmlFor=\"productName\">Product Name</label>\n                    <input\n                        id=\"productName\"\n                        type=\"text\"\n                        {...formik.getFieldProps('productName')}\n                    />\n                    {formik.touched.productName && formik.errors.productName ? (\n                        <div>{formik.errors.productName}</div>\n                    ) : null}\n\n\n                    <label htmlFor=\"categoryId\">Category</label>\n                    <select\n                        id=\"categoryId\"\n                        type=\"text\"\n                        {...formik.getFieldProps('categoryId')}>\n                        {[<option key={'_noSelectedCategory'} value={''}>Select</option>, ...categories.map(_cat => <option key={_cat.id} value={_cat.id}>{_cat.name}</option>)]}\n                    </select>\n                    {formik.touched.categoryId && formik.errors.categoryId ? (\n                        <div>{formik.errors.categoryId}</div>\n                    ) : null}\n\n\n                    <label htmlFor=\"price\">Price</label>\n                    <input\n                        id=\"price\"\n                        type=\"text\"\n                        {...formik.getFieldProps('price')}\n                    />\n                    {formik.touched.price && formik.errors.price ? (\n                        <div>{formik.errors.price}</div>\n                    ) : null}\n\n\n                    <label htmlFor=\"quantity\">Quantity</label>\n                    <input\n                        id=\"quantity\"\n                        type=\"text\"\n                        {...formik.getFieldProps('quantity')}\n                    />\n                    {formik.touched.quantity && formik.errors.quantity ? (\n                        <div>{formik.errors.quantity}</div>\n                    ) : null}\n\n\n                    <label htmlFor=\"unit\">Unit</label>\n                    <select\n                        id=\"unit\"\n                        type=\"text\"\n                        {...formik.getFieldProps('unit')}>\n                        {[<option key={\"_noSelectedUnit\"} value={''}>Select</option>, ...units.map(_unit => <option key={_unit} value={_unit}>{_unit}</option>)]}\n                    </select>\n                    {formik.touched.unit && formik.errors.unit ? (\n                        <div>{formik.errors.unit}</div>\n                    ) : null}\n\n\n                    <label htmlFor=\"description\">Description</label>\n                    <input\n                        id=\"description\"\n                        type=\"text\"\n                        {...formik.getFieldProps('description')}\n                    />\n                    {formik.touched.description && formik.errors.description ? (\n                        <div>{formik.errors.description}</div>\n                    ) : null}\n\n                    <button type=\"submit\">Add Product</button>\n                </form>\n            )}\n        </Formik>\n    );\n}\n\n","/Users/zuko/Documents/botiga-merchant-dashboard/src/helpers/validators.js",[],["75","76"],"/Users/zuko/Documents/botiga-merchant-dashboard/src/components/AppRoutes.js",[],"/Users/zuko/Documents/botiga-merchant-dashboard/src/components/auth/Login.js",[],"/Users/zuko/Documents/botiga-merchant-dashboard/src/helpers/Token.js",["77","78"],"/Users/zuko/Documents/botiga-merchant-dashboard/src/components/auth/login.js",[],"/Users/zuko/Documents/botiga-merchant-dashboard/src/components/auth/verify-otp.js",["79"],"import React, { useState, useEffect } from \"react\";\nimport OtpInput from 'react-otp-input';\nimport { withRouter } from \"react-router-dom\";\nimport { getOTP } from \"../../services/auth-service\";\n\nexport const VerifyOtp = withRouter(({ history, location }) => {\n    const { state: { phone } } = location;\n    const [otp, setOtp] = useState('');\n    const [sessionId, setSessionId] = useState('');\n\n    useEffect(() => {\n        getOTP(phone).then(res => {\n            setSessionId(res.data['sessionId']);\n        }).catch(err => { })\n    }, []);\n\n    function verifyEnterdOTP() {\n        if (otp === sessionId) { goToHomePage(); }\n        else { alert(\"Otp missmatch\"); }\n    }\n\n    function goToHomePage() {\n        history.replace(\"/add-product\");\n    }\n\n    return (\n        <React.Fragment>\n            <OtpInput\n                value={otp}\n                onChange={val => setOtp(val)}\n                numInputs={6}\n                separator={<span>-</span>} />\n            <button onClick={verifyEnterdOTP}>Verify Otp</button>\n        </React.Fragment>\n    );\n})","/Users/zuko/Documents/botiga-merchant-dashboard/src/services/product-service.js",[],"/Users/zuko/Documents/botiga-merchant-dashboard/src/helpers/axios.js",["80"],"import axios from \"axios\";\n\nconst instance = axios.create({ baseURL: 'https://dev.botiga.app' });\n\ninstance.defaults.headers.common['Authorization'] = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmZmMxOGU0YmIxOWRjNDliM2RmODQ3ZSIsImlhdCI6MTYxMjA0NTQ2NywiZXhwIjoxNjE0NjM3NDY3fQ.yixJsoKZjwaC9elFqvh3srdyyjb1S_DIIcx_NMNPoIw';\ninstance.defaults.headers.post['Content-Type'] = 'application/json';\ninstance.defaults.headers.post['Accept'] = 'application/json';\n\nexport default function() { return instance; }","/Users/zuko/Documents/botiga-merchant-dashboard/src/services/category-service.js",[],"/Users/zuko/Documents/botiga-merchant-dashboard/src/services/common-service.js",[],"/Users/zuko/Documents/botiga-merchant-dashboard/src/services/auth-service.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"89","line":3,"column":10,"nodeType":"87","messageId":"88","endLine":3,"endColumn":22},{"ruleId":"85","severity":1,"message":"90","line":7,"column":21,"nodeType":"87","messageId":"88","endLine":7,"endColumn":31},{"ruleId":"91","severity":1,"message":"92","line":13,"column":8,"nodeType":"93","endLine":13,"endColumn":10,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":84,"column":37,"nodeType":"97","endLine":84,"endColumn":118},{"ruleId":"81","replacedBy":"98"},{"ruleId":"83","replacedBy":"99"},{"ruleId":"100","severity":2,"message":"101","line":6,"column":12,"nodeType":"87","messageId":"102","endLine":6,"endColumn":20},{"ruleId":"100","severity":2,"message":"101","line":7,"column":20,"nodeType":"87","messageId":"102","endLine":7,"endColumn":28},{"ruleId":"91","severity":1,"message":"103","line":15,"column":8,"nodeType":"93","endLine":15,"endColumn":10,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":9,"column":1,"nodeType":"107","endLine":9,"endColumn":47},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'fetchProfile' is defined but never used.","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["110"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["108"],["109"],"no-undef","'instance' is not defined.","undef","React Hook useEffect has a missing dependency: 'phone'. Either include it or remove the dependency array.",["111"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [props]",{"range":"116","text":"117"},"Update the dependencies array to be: [phone]",{"range":"118","text":"119"},[567,569],"[props]",[538,540],"[phone]"]